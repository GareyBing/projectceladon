From 93afb016218091893212883f0da3becc3ac73aba Mon Sep 17 00:00:00 2001
From: Randy Xu <randy.xu@intel.com>
Date: Wed, 16 Nov 2016 23:00:48 -0800
Subject: [PATCH 4/4] HACK: Workaround random crashes in HWC2.

We are not sure why this display is expired in these cases
but this seems to fix the random crashes being experienced at
start up.

Bug ID: #https://github.com/android-ia/external-drm_hwcomposer/issues/9
Test: Boots up to home screen and doesn't crash at startup.

Signed-off-by: Randy Xu <randy.xu@intel.com>
---
 services/surfaceflinger/DisplayHardware/HWC2.cpp | 4 +++-
 services/surfaceflinger/DisplayHardware/HWC2.h   | 9 ++++++++-
 2 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/services/surfaceflinger/DisplayHardware/HWC2.cpp b/services/surfaceflinger/DisplayHardware/HWC2.cpp
index 4fe3cfd..8607291 100644
--- a/services/surfaceflinger/DisplayHardware/HWC2.cpp
+++ b/services/surfaceflinger/DisplayHardware/HWC2.cpp
@@ -951,7 +951,8 @@ std::shared_ptr<Layer> Display::getLayerById(hwc2_layer_t id) const
 // Layer methods

 Layer::Layer(const std::shared_ptr<Display>& display, hwc2_layer_t id)
-  : mDisplay(display),
+  : magicNumber(0xdeadbeef),
+    mDisplay(display),
     mDisplayId(display->getId()),
     mDevice(display->getDevice()),
     mId(id)
@@ -962,6 +963,7 @@ Layer::Layer(const std::shared_ptr<Display>& display, hwc2_layer_t id)

 Layer::~Layer()
 {
+    magicNumber = 0x12345678;
     auto display = mDisplay.lock();
     if (display) {
         display->destroyLayer(mId);
diff --git a/services/surfaceflinger/DisplayHardware/HWC2.h b/services/surfaceflinger/DisplayHardware/HWC2.h
index fb04af8..c1151f3 100644
--- a/services/surfaceflinger/DisplayHardware/HWC2.h
+++ b/services/surfaceflinger/DisplayHardware/HWC2.h
@@ -361,7 +361,13 @@ public:
     Layer(const std::shared_ptr<Display>& display, hwc2_layer_t id);
     ~Layer();

-    bool isAbandoned() const { return mDisplay.expired(); }
+    bool isAbandoned() const {
+      if(magicNumber != 0xdeadbeef){
+        ALOGE("HWC2::Layer object is corrupted[0x%x]!",magicNumber);
+        return true;
+      }
+      return mDisplay.expired();
+    }
     hwc2_layer_t getId() const { return mId; }

     [[clang::warn_unused_result]] Error setCursorPosition(int32_t x, int32_t y);
@@ -388,6 +394,7 @@ public:
     [[clang::warn_unused_result]] Error setZOrder(uint32_t z);

 private:
+    unsigned int magicNumber;
     std::weak_ptr<Display> mDisplay;
     hwc2_display_t mDisplayId;
     Device& mDevice;
--
2.5.0
