From 8e87064b28f3e40267b1a05664bba5a840d46189 Mon Sep 17 00:00:00 2001
From: Rafael Antognolli <rafael.antognolli@intel.com>
Date: Tue, 6 Sep 2016 11:06:04 -0700
Subject: [PATCH 2/7] libsync: poll on sync_wait() and set error values.

Return negative values and set the error values on failure, including
ETIME.

Also set data.flags and data.pad to 0 when calling sync_merge, otherwise
the IOCTL will complain.

Change-Id: I27a357b56efb7c2cdb98231f5a6a8413182aa1f1
---
 libsync/sync.c | 24 ++++++++++++++++++++----
 1 file changed, 20 insertions(+), 4 deletions(-)

diff --git a/libsync/sync.c b/libsync/sync.c
index ef435e5..884db1e 100644
--- a/libsync/sync.c
+++ b/libsync/sync.c
@@ -16,6 +16,7 @@
  *  limitations under the License.
  */

+#include <errno.h>
 #include <fcntl.h>
 #include <malloc.h>
 #include <stdint.h>
@@ -31,21 +32,36 @@
 int sync_wait(int fd, int timeout)
 {
     struct pollfd fds;
+    int polled, ret = 0;
+
+    if (fd < 0) {
+        errno = EINVAL;
+        return -1;
+    }

     fds.fd = fd;
-    fds.events = POLLIN | timeout;
+    fds.events = POLLIN;
+
+    errno = 0;
+    polled = poll(&fds, 1, timeout);
+    if (!polled) {
+        errno = ETIME;
+        ret = -1;
+    } else if (polled < 0) {
+        ret = polled;
+    }

-    //return poll(&fds, 1, timeout);
-    return 0;
+    return ret;
 }

 int sync_merge(const char *name, int fd1, int fd2)
 {
     struct sync_merge_data data;
     int err;
-    //memset(&data, 0, sizeof(data));

     data.fd2 = fd2;
+    data.pad = 0;
+    data.flags = 0;
     strlcpy(data.name, name, sizeof(data.name));

     err = ioctl(fd1, SYNC_IOC_MERGE, &data);
--
2.7.4
