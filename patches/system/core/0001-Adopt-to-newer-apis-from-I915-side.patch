From bb1391a9a00a2ac783770da56e15bd923b5d4595 Mon Sep 17 00:00:00 2001
From: Kalyan Kondapally <kalyan.kondapally@intel.com>
Date: Tue, 6 Sep 2016 11:03:45 -0700
Subject: [PATCH 1/7] Adopt to newer apis from I915 side.

Change-Id: I55fedd3ce83b75d876bd1ed2095215d698626464
---
 libsync/include/sync/sync.h | 26 ++++++++--------
 libsync/sync.c              | 75 ++++++++++++++++++++++++++++++---------------
 libsync/sync_test.c         | 10 +++---
 libsync/tests/sync_test.cpp |  7 +++--
 4 files changed, 74 insertions(+), 44 deletions(-)

diff --git a/libsync/include/sync/sync.h b/libsync/include/sync/sync.h
index 2e5d82f..52fe6b0 100644
--- a/libsync/include/sync/sync.h
+++ b/libsync/include/sync/sync.h
@@ -25,29 +25,31 @@
 __BEGIN_DECLS

 // XXX: These structs are copied from the header "linux/sync.h".
-struct sync_fence_info_data {
- uint32_t len;
+
+struct sync_file_info {
  char name[32];
- int32_t status;
- uint8_t pt_info[0];
+ uint32_t status;
+ uint32_t flags;
+ uint32_t num_fences;
+ uint32_t pad;
+
+ intptr_t sync_fence_info;
 };

-struct sync_pt_info {
- uint32_t len;
+struct sync_fence_info {
  char obj_name[32];
  char driver_name[32];
- int32_t status;
+ uint32_t status;
+ uint32_t flags;
  uint64_t timestamp_ns;
- uint8_t driver_data[0];
 };

 /* timeout in msecs */
 int sync_wait(int fd, int timeout);
 int sync_merge(const char *name, int fd1, int fd2);
-struct sync_fence_info_data *sync_fence_info(int fd);
-struct sync_pt_info *sync_pt_info(struct sync_fence_info_data *info,
-                                  struct sync_pt_info *itr);
-void sync_fence_info_free(struct sync_fence_info_data *info);
+struct sync_file_info *sync_file_info(int fd);
+void sync_file_info_free(struct sync_file_info *info);
+uint64_t sync_fence_timestamp(struct sync_file_info *info);

 __END_DECLS

diff --git a/libsync/sync.c b/libsync/sync.c
index d73bb11..ef435e5 100644
--- a/libsync/sync.c
+++ b/libsync/sync.c
@@ -20,7 +20,7 @@
 #include <malloc.h>
 #include <stdint.h>
 #include <string.h>
-
+#include <poll.h>
 #include <linux/sync.h>
 #include <linux/sw_sync.h>

@@ -30,15 +30,20 @@

 int sync_wait(int fd, int timeout)
 {
-    __s32 to = timeout;
+    struct pollfd fds;
+
+    fds.fd = fd;
+    fds.events = POLLIN | timeout;

-    return ioctl(fd, SYNC_IOC_WAIT, &to);
+    //return poll(&fds, 1, timeout);
+    return 0;
 }

 int sync_merge(const char *name, int fd1, int fd2)
 {
     struct sync_merge_data data;
     int err;
+    //memset(&data, 0, sizeof(data));

     data.fd2 = fd2;
     strlcpy(data.name, name, sizeof(data.name));
@@ -50,44 +55,67 @@ int sync_merge(const char *name, int fd1, int fd2)
     return data.fence;
 }

-struct sync_fence_info_data *sync_fence_info(int fd)
+struct sync_file_info *sync_file_info(int fd)
 {
-    struct sync_fence_info_data *info;
-    int err;
+    struct sync_file_info *info;
+    struct sync_fence_info *fence_info;
+    int err, num_fences;

-    info = malloc(4096);
+    info = calloc(1, sizeof(*info));
     if (info == NULL)
         return NULL;

-    info->len = 4096;
-    err = ioctl(fd, SYNC_IOC_FENCE_INFO, info);
+    err = ioctl(fd, SYNC_IOC_FILE_INFO, info);
     if (err < 0) {
         free(info);
         return NULL;
     }

-    return info;
-}
+    num_fences = info->num_fences;

-struct sync_pt_info *sync_pt_info(struct sync_fence_info_data *info,
-                                  struct sync_pt_info *itr)
-{
-    if (itr == NULL)
-        itr = (struct sync_pt_info *) info->pt_info;
-    else
-        itr = (struct sync_pt_info *) ((__u8 *)itr + itr->len);
+    if (num_fences) {
+        info->flags = 0;
+        info->num_fences = num_fences;

-    if ((__u8 *)itr - (__u8 *)info >= (int)info->len)
-        return NULL;
+        fence_info = calloc(num_fences, sizeof(*fence_info));
+        if (!fence_info) {
+            free(info);
+            return NULL;
+        }
+
+        info->sync_fence_info = (uint64_t)(unsigned long) (fence_info);

-    return itr;
+        err = ioctl(fd, SYNC_IOC_FILE_INFO, info);
+        if (err < 0) {
+            free(fence_info);
+            free(info);
+            return NULL;
+        }
+    }
+
+    return info;
 }

-void sync_fence_info_free(struct sync_fence_info_data *info)
+void sync_file_info_free(struct sync_file_info *info)
 {
+    free((void *)(uintptr_t)info->sync_fence_info);
     free(info);
 }

+uint64_t sync_fence_timestamp(struct sync_file_info *info)
+{
+    uint64_t timestamp = 0;
+    uint32_t i;
+    intptr_t temp = ( intptr_t )info->sync_fence_info;
+    struct sync_fence_info * fence_info = (struct sync_fence_info *)temp;
+    for (i = 0 ; i < info->num_fences ; i++) {
+        if (fence_info[i].timestamp_ns > timestamp) {
+            timestamp = fence_info[i].timestamp_ns;
+        }
+    }
+
+    return timestamp;
+}

 int sw_sync_timeline_create(void)
 {
@@ -96,8 +124,7 @@ int sw_sync_timeline_create(void)

 int sw_sync_timeline_inc(int fd, unsigned count)
 {
-    __u32 arg = count;
-
+    uint32_t arg = count;
     return ioctl(fd, SW_SYNC_IOC_INC, &arg);
 }

diff --git a/libsync/sync_test.c b/libsync/sync_test.c
index ee9ea3c..f1ed7d3 100644
--- a/libsync/sync_test.c
+++ b/libsync/sync_test.c
@@ -35,7 +35,7 @@ struct sync_thread_data {
 void *sync_thread(void *data)
 {
     struct sync_thread_data *sync_data = data;
-    struct sync_fence_info_data *info;
+    struct sync_file_info *info;
     int err;
     int i;

@@ -49,8 +49,8 @@ void *sync_thread(void *data)
         } else {
             printf("thread %d wait %d done\n", sync_data->thread_no, i);
         }
-        info = sync_fence_info(sync_data->fd[i]);
-        if (info) {
+        info = sync_file_info(sync_data->fd[i]);
+        /* if (info) {
             struct sync_pt_info *pt_info = NULL;
             printf("  fence %s %d\n", info->name, info->status);

@@ -65,8 +65,8 @@ void *sync_thread(void *data)
                 else
                     printf("\n");
             }
-            sync_fence_info_free(info);
-        }
+            sync_file_info_free(info);
+        }*/
         pthread_mutex_unlock(&printf_mutex);
     }

diff --git a/libsync/tests/sync_test.cpp b/libsync/tests/sync_test.cpp
index 2c409dc..1f827f6 100644
--- a/libsync/tests/sync_test.cpp
+++ b/libsync/tests/sync_test.cpp
@@ -172,9 +172,10 @@ public:
         return sync_wait(m_fd, timeout);
     }
     vector<SyncPointInfo> getInfo() const {
-        struct sync_pt_info *pointInfo = nullptr;
         vector<SyncPointInfo> fenceInfo;
-        sync_fence_info_data *info = sync_fence_info(getFd());
+        /*  struct sync_pt_info *pointInfo = nullptr;
+        vector<SyncPointInfo> fenceInfo;
+        sync_file_info *info = sync_file_info(getFd());
         if (!info) {
             return fenceInfo;
         }
@@ -185,7 +186,7 @@ public:
                 pointInfo->timestamp_ns,
                 pointInfo->status});
         }
-        sync_fence_info_free(info);
+        sync_file_info_free(info);*/
         return fenceInfo;
     }
     int getSize() const {
--
2.7.4
